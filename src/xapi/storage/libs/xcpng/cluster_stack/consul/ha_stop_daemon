#!/usr/bin/env python
import signal
import os
import xapi.storage.libs.xcpng.cluster_stack.consul.ha as ha
from xapi.storage import log
from xapi.storage.libs.xcpng.utils import get_host_uuid_by_name, get_current_host_uuid

log.debug('HA ha_stop_daemon')

# Leave the lockspace indicating xapi's liveness on this host, to ensure there
# are no active lockspaces at shutdown. If there are any active lockspaces, dlm
# cannot exit cleanly on shutdown.
# We do nothing if we aren't in the lockspace, to avoid failing and make this
# script idempotent.
if ha.consul_node_id in ha.get_xapi_ha_lockspace_members():
    ha.leave_xapi_ha_lockspace()
log.debug('Members of xapi-ha-lockspace: %s' % ha.get_xapi_ha_lockspace_members())

ha.remove_signal_file()

sf = ha.Statefile()

master = sf.get_master()
if master.uuid == ha.xapi_host_uuid:
    try:
        os.kill(master.pid, signal.SIGTERM)
    except:
        log.debug('HA ha_stop_daemon failed to kill master lock process')
    sf.set_master(ha.Master(None, None))
